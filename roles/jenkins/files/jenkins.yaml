# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: "nfs-csi"

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: "{{ jenkins_name }}"
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Jenkins Image parameters

## Bitnami Jenkins image
## ref: https://hub.docker.com/r/bitnami/jenkins/tags/
## @param image.registry Jenkins image registry
## @param image.repository Jenkins image repository
## @param image.tag Jenkins image tag (immutable tags are recommended)
## @param image.digest Jenkins image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Jenkins image pull policy
## @param image.pullSecrets Jenkins image pull secrets
## @param image.debug Enable image debug mode
##
image:
  registry: docker.io
  repository: bitnami/jenkins
  tag: 2.401.3-debian-11-r0
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## @section Jenkins Configuration parameters
## Jenkins settings based on environment variables
## ref: https://github.com/bitnami/containers/tree/main/bitnami/jenkins#configuration

## @param jenkinsUser Jenkins username
##
jenkinsUser: user
## @param jenkinsPassword Jenkins user password
## Defaults to a random 10-character alphanumeric string if not set
##
jenkinsPassword: "user123"
## @param jenkinsHost Jenkins host to create application URLs
##
jenkinsHost: "{{ jenkins_name }}"
## @param jenkinsHome Jenkins home directory
##
jenkinsHome: /bitnami/jenkins/home
## @param javaOpts Custom JVM parameters
##
javaOpts: []
## @param disableInitialization Skip performing the initial bootstrapping for Jenkins
##
disableInitialization: "no"
## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []
## @param extraEnvVars Array with extra environment variables to add to the Jenkins container
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
##
extraEnvVarsSecret: ""

## @param plugins List of plugins to be installed during Jenkins first boot.
## Note: For this value to take effect on already initialized pods, set overridePlugins=true.
# plugins:
#   - kubernetes:3852.v41ea_166a_ed1b_
#   - workflow-aggregator:590.v6a_d052e5a_a_b_5
#   - git:4.13.0
#   - configuration-as-code:1670.v564dc8b_982d0

plugins: []
##  - configuration-as-code:1670.v564dc8b_982d0

## @param extraPlugins List of plugins to install in addition to those listed in `plugins`
##
extraPlugins: 
#  - configuration-as-code:1670.v564dc8b_982d0
## @param latestPlugins Set to true to download the latest version of all dependencies, even if the version(s) of the requested plugin(s) are not the latest.
##
latestPlugins: true
## @param latestSpecifiedPlugins Set to true download the latest dependencies of any plugin that is requested to have the latest version.
##
latestSpecifiedPlugins: true
## @param skipImagePlugins Set this value to true to skip installing plugins stored under /opt/bitnami/jenkins/plugins
##
skipImagePlugins: false
## @param overridePlugins Setting this value to true will remove all plugins from the jenkinsHome directory and install new plugins from scratch.
##
overridePlugins: false
## @param overridePaths Comma-separated list of relative paths to be removed from Jenkins home volume and/or mounted if present in the mounted content dir
##
overridePaths: ""
## @param initScripts Dictionary of scripts to be mounted at `/docker-entrypoint-initdb.d`. Evaluated as a template. Allows .sh and .groovy formats.
## These scripts will only be executed during the container first startup.
## For example:
## initScripts:
##   my_init_script.sh: |
##      #!/bin/sh
##      echo "Do something."
##
initScripts: {}
## @param initScriptsCM ConfigMap containing the `/docker-entrypoint-initdb.d` scripts. Evaluated as a template.
##
initScriptsCM: ""
## @param initScriptsSecret Secret containing `/docker-entrypoint-initdb.d` scripts to be executed at initialization time that contain sensitive data. Evaluated as a template.
##
initScriptsSecret: ""
## @param initHookScripts Dictionary of scripts to be mounted at `$JENKINS_HOME/init.groovy.d`. Evaluated as a template. Allows .sh and .groovy formats.
## These init scripts will executed each time Jenkins is .
##
## For example:
## initHookScripts:
##   my_script.groovy: |
##     println "Hello World"
##
initHookScripts: {}
## @param initHookScriptsCM ConfigMap containing the `$JENKINS_HOME/init.groovy.d` scripts. Evaluated as a template.
##
initHookScriptsCM: ""
## @param initHookScriptsSecret Secret containing `$JENKINS_HOME/init.groovy.d` scripts to be executed at initialization time that contain sensitive data. Evaluated as a template.
##
initHookScriptsSecret: ""

## @section Jenkins TLS configuration
##
tls:
  ## @param tls.autoGenerated Create self-signed TLS certificates. Currently only supports PEM certificates.
  ##
  autoGenerated: false
  ## @param tls.usePemCerts Use this variable if your secrets contain PEM certificates instead of PKCS12
  ## Note: Ignored when using autoGenerated certs.
  ##
  usePemCerts: false
  ## @param tls.existingSecret Name of the existing secret containing the 'jenkins.jks' keystore, if usePemCerts is enabled, use keys 'tls.crt' and 'tls.key'.
  ##
  existingSecret: ""
  ## @param tls.password Password to access the JKS keystore when it is password-protected.
  ##
  password: ""
  ## @param tls.passwordsSecret Name of the existing secret containing the JKS keystore password.
  ##
  passwordsSecret: ""
  ## Init Container resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param tls.resources.limits Init container generate-tls-certs resource limits
  ## @param tls.resources.requests Init container generate-tls-certs resource requests
  ##
  resources:
    ## Example:
    ## limits:
    ##   cpu: 100m
    ##   memory: 128Mi
    ##
    limits: {}
    ## Examples:
    ## requests:
    ##   cpu: 100m
    ##   memory: 128Mi
    ##
    requests: {}

## @section Jenkins Configuration as Code plugin settings (EXPERIMENTAL)
## The values under this section require that the plugin 'configuration-as-code' is installed.
## All the configuration-as-code values are rendered as a template.
##
configAsCode:
  ## @param configAsCode.enabled Enable configuration as code.
  ##
  enabled: true
  ## @param configAsCode.extraConfigFiles List of additional configuration-as-code files to be mounted
  ## E.g.:
  ##  welcome-message.yaml: |-
  ##    jenkins:
  ##      systemMessage: Welcome to our CI\CD server.  This Jenkins is configured and managed 'as code'.
  ##
  
  extraConfigFiles:
    cac.yaml: |-
      credentials:
        system:
          domainCredentials:
          - credentials:
            - usernamePassword:
                description: "docker-registry-credentials"
                id: "docker-registry-credentials"
                password: "{AQAAABAAAAAQ9jO/VU4hEdC0ioZTyxAkLoRni8d+EVotctMEAb4z+rY=}"
                scope: GLOBAL
                username: "brazovsky"
            - file:
                description: "kube-config-credentials"
                fileName: "admin.conf"
                id: "kube-config-credentials"
                scope: GLOBAL
                secretBytes: "{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}"
            - string:
                id: "botSecret"
                scope: GLOBAL
                secret: "{AQAAABAAAAAwWoHKkhNhpLovSbYUS1qLVNYygwuh5yFk5K1VrkIrJp+ZArw/YmCYEXUwnFMd1lKjkTObkIf1eb5owx2u7CbkXw==}"
            - string:
                id: "chatId"
                scope: GLOBAL
                secret: "{AQAAABAAAAAQyCKdCiE6YbFWJaJ+yio2zDyoQSz5a2NGKEwbGomdpbc=}"
            - basicSSHUserPrivateKey:
                description: "ubuntumaster"
                id: "ubuntumaster"
                passphrase: "{AQAAABAAAAAQy1QebWWWHTcf+8jVVUYMrVbtn4lBJhlRsX1W+59A0TE=}"
                privateKeySource:
                  directEntry:
                    privateKey: "{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}"
                scope: GLOBAL
                username: "brazovsky"
            - usernamePassword:
                id: "diplom1"
                password: "{AQAAABAAAAAQeEcJpyZ9FgBAyB81z0cyKmHsnka9D0oyV43N+Pf7Ne8=}"
                scope: GLOBAL
                username: "acd"
      jenkins:
        agentProtocols:
        - "JNLP4-connect"
        - "Ping"
        authorizationStrategy:
          loggedInUsersCanDoAnything:
            allowAnonymousRead: false
        clouds:
        - kubernetes:
            jenkinsTunnel: "{{ jenkins_name }}-agent-listener.jenkins-ns.svc.cluster.local:50000"
            jenkinsUrl: "http://{{ jenkins_name }}.jenkins-ns.svc.cluster.local:80"
            name: "kubernetes"
            namespace: "jenkins-ns"
            podLabels:
            - key: "app.kubernetes.io/component"
              value: "jenkins-agent"
            - key: "app.kubernetes.io/instance"
              value: "{{ jenkins_name }}"
            - key: "app.kubernetes.io/managed-by"
              value: "Helm"
            - key: "app.kubernetes.io/name"
              value: "{{ jenkins_name }}"
            - key: "helm.sh/chart"
              value: "jenkins-12.2.7"
            serverUrl: "https://kubernetes.default"
            templates:
            - containers:
              - image: "docker.io/bitnami/jenkins-agent:0.3131.0-debian-11-r37"
                name: "jnlp"
                resourceRequestCpu: "300m"
                resourceRequestMemory: "512Mi"
              id: "agent-template"
              label: "kubernetes-agent"
              name: "{{ jenkins_name }}-agent"
              namespace: "jenkins-ns"
              yamlMergeStrategy: "override"
        crumbIssuer:
          standard:
            excludeClientIPFromCrumb: true
        disableRememberMe: false
        labelAtoms:
        - name: "built-in"
        - name: "kubernetes-agent"
        markupFormatter: "plainText"
        mode: NORMAL
        myViewsTabBar: "standard"
        numExecutors: 2
        primaryView:
          all:
            name: "all"
        projectNamingStrategy: "standard"
        quietPeriod: 5
        remotingSecurity:
          enabled: true
        scmCheckoutRetryCount: 0
        securityRealm:
          local:
            allowsSignup: false
            enableCaptcha: false
            users:
            - id: "user"
              name: "user"
              properties:
              - "apiToken"
              - "mailer"
              - "myView"
              - preferredProvider:
                  providerId: "default"
              - "timezone"
              - "experimentalFlags"
        slaveAgentPort: 50000
        updateCenter:
          sites:
          - id: "default"
            url: "https://updates.jenkins.io/update-center.json"
        views:
        - all:
            name: "all"
        viewsTabBar: "standard"
      globalCredentialsConfiguration:
        configuration:
          providerFilter: "none"
          typeFilter: "none"
      security:
        apiToken:
          creationOfLegacyTokenEnabled: false
          tokenGenerationOnCreationEnabled: false
          usageStatisticsEnabled: true
        gitHooks:
          allowedOnAgents: false
          allowedOnController: false
        gitHostKeyVerificationConfiguration:
          sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
      unclassified:
        buildDiscarders:
          configuredBuildDiscarders:
          - "jobBuildDiscarder"
        fingerprints:
          fingerprintCleanupDisabled: false
          storage: "file"
        gitHubPluginConfig:
          hookUrl: "http://{{ jenkins_name }}/github-webhook/"
        location:
          adminAddress: "address not configured yet <nobody@nowhere>"
          url: "http://{{ jenkins_name }}/"
        mailer:
          charset: "UTF-8"
          useSsl: false
          useTls: false
        pollSCM:
          pollingThreadCount: 10
        scmGit:
          addGitTagAction: false
          allowSecondFetch: false
          createAccountBasedOnEmail: false
          disableGitToolChooser: false
          hideCredentials: false
          showEntireCommitSummaryInChanges: false
          useExistingAccountWithSameEmail: false
      tool:
        git:
          installations:
          - home: "git"
            name: "Default"
        mavenGlobalConfig:
          globalSettingsProvider: "standard"
          settingsProvider: "standard"



  ## @param configAsCode.securityRealm Content of the 'securityRealm' block
  ##
  securityRealm: {}
  ## @param configAsCode.authorizationStrategy Content of the 'authorizationStrategy' block
  ##
  authorizationStrategy: {}
  ## @param configAsCode.security Content of the 'security' block
  ##
  security: {}
  ## @param configAsCode.extraJenkins Append additional settings under the 'jenkins' block
  ##
  extraJenkins: {}
  ## @param configAsCode.extraConfig Append additional settings at the root of the configuration-as-code file
  ##
  extraConfig: {}
  ## @param configAsCode.extraKubernetes Append additional settings under the Kubernetes cloud block
  ## NOTE: This value will only take effect if agent.enabled=true
  ##
  extraKubernetes: {}
  ## @param configAsCode.extraClouds Additional clouds
  ## NOTE: This value will only take effect if agent.enabled=true
  ##
  extraClouds: []
  ## @param configAsCode.existingConfigmap Name of an existing configmap containing the config-as-code files.
  ##
  existingConfigmap: ""
  ## Configuration auto-reload sidecar container
  ##
  autoReload:
    ## @param configAsCode.autoReload.enabled Enable the creation of the autoReload sidecar container.
    ## Note: This container will trigger the configuration reload each time the Configmap is updated. Changes applied via Jenkins UI will be overwritten.
    ## If disabled, config as code files will only take effect during the container first boot.
    ##
    enabled: true
    ## @param configAsCode.autoReload.initialDelay In seconds, time
    ##
    initialDelay: 360
    ## @param configAsCode.autoReload.reqRetries
    ##
    reqRetries: 12
    ## @param configAsCode.autoReload.interval
    ##
    interval: 10
    ## @param configAsCode.autoReload.command
    ##
    command: []
    ## @param configAsCode.autoReload.args
    ##
    args: []
    ## @param configAsCode.autoReload.extraEnvVars
    ##
    extraEnvVars: []
    ## @param configAsCode.autoReload.extraEnvVarsSecret
    ##
    extraEnvVarsSecret: ""
    ## @param configAsCode.autoReload.extraEnvVarsCM
    ##
    extraEnvVarsCM: ""
    ## @param configAsCode.autoReload.extraVolumeMounts
    ##
    extraVolumeMounts: []
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param configAsCode.autoReload.containerSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context
    ## @param configAsCode.autoReload.containerSecurityContext.runAsUser Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser
    ## @param configAsCode.autoReload.containerSecurityContext.runAsNonRoot Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsNonRoot
    ## @param configAsCode.autoReload.containerSecurityContext.readOnlyRootFilesystem Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsNonRoot
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: false

## Jenkins agents (EXPERIMENTAL)
## This feature won't take effect if ConfigAsCode is not enabled.
## NOTE: Values under this field may use Jenkins syntax instead of Kubernetes syntax
## Ref: https://www.jenkins.io/doc/pipeline/steps/kubernetes/
agent:
  ## @param agent.enabled Set to true to enable the configuration of Jenkins kubernetes agents
  ##
  enabled: true
  ## Bitnami Jenkins agent image
  ## ref: https://hub.docker.com/r/bitnami/jenkins/tags/
  ## @param agent.image.registry Jenkins image registry
  ## @param agent.image.repository Jenkins image repository
  ## @param agent.image.tag Jenkins image tag (immutable tags are recommended)
  ## @param agent.image.digest Jenkins image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param agent.image.pullPolicy Jenkins image pull policy
  ## @param agent.image.pullSecrets Jenkins image pull secrets
  ## @param agent.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/jenkins-agent
    tag: 0.3131.0-debian-11-r37
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

  ## @param agent.templateLabel Label for the Kubernetes agent template
  ##
  templateLabel: "kubernetes-agent"
  ## @param agent.podLabels Additional pod labels for the Jenkins agent pods
  ##
  podLabels: {}
  ## @param agent.annotations Additional pod annotations for the Jenkins agent pods
  ##
  annotations: {}
  ## @param agent.sidecars Additional sidecar containers for the Jenkins agent pods
  ##
  sidecars: []
  ## @param agent.command Override default container command (useful when using custom images)
  ##
  command: ""
  ## @param agent.args Override default container args (useful when using custom images)
  ##
  args: ""
  ## @param agent.containerExtraEnvVars Additional env vars for the Jenkins agent pods
  ##
  containerExtraEnvVars: []
  ## @param agent.podExtraEnvVars Additional env vars for the Jenkins agent pods
  ##
  podExtraEnvVars: []
  ## @param agent.extraAgentTemplate Extend the default agent template
  ##
  extraAgentTemplate: {}
  ## @param agent.extraTemplates Provide your own custom agent templates
  ##
  extraTemplates: []
  ## Jenkins containers' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param agent.resources.limits The resources limits for the Jenkins container
  ## @param agent.resources.requests [object] The requested resources for the Jenkins container
  ##
  resources:
    limits: {}
    requests:
      memory: 512Mi
      cpu: 300m
  ## Container securityContext
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param agent.containerSecurityContext.enabled Enable container security context
  ## @param agent.containerSecurityContext.runAsUser User ID for the agent container
  ## @param agent.containerSecurityContext.runAsGroup User ID for the agent container
  ## @param agent.containerSecurityContext.privileged Decide if the container runs privileged.
  ##
  containerSecurityContext:
    enabled: false
    runAsUser: ""
    runAsGroup: ""
    privileged: false

## @section Jenkins deployment parameters

## @param updateStrategy.type Jenkins deployment strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
## e.g:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate

## @param priorityClassName Jenkins pod priority class name
##
priorityClassName: ""
## @param schedulerName Name of the k8s scheduler (other than default)
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
## The value is evaluated as a template
##
topologySpreadConstraints: []
## @param hostAliases Jenkins pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param extraVolumes Optionally specify extra list of additional volumes for Jenkins pods
##
extraVolumes: 
  - name: plugin-jenkins
    persistentVolumeClaim:
      claimName: plugin-jenkins
  - name: jobs-jenkins
    persistentVolumeClaim:
      claimName: jobs-jenkins
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Jenkins container(s)
##
extraVolumeMounts: 
  - name: plugin-jenkins
    mountPath: /opt/bitnami/jenkins/plugins
  - name: jobs-jenkins
    mountPath: /mnt/calc
    

## @param sidecars Add additional sidecar containers to the Jenkins pod
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the Jenkins pods
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    ports:
##      - name: portname
##        containerPort: 1234
##
initContainers: []
## @param lifecycleHooks Add lifecycle hooks to the Jenkins deployment
##
lifecycleHooks: {}
## @param podLabels Extra labels for Jenkins pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Jenkins pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## Jenkins containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the Jenkins container
## @param resources.requests [object] The requested resources for the Jenkins container
##
resources:
  limits: {}
  requests:
    memory: 512Mi
    cpu: 300m
## Container ports
## @param containerPorts.http Jenkins HTTP container port
## @param containerPorts.https Jenkins HTTPS container port
## @param containerPorts.agentListener Jenkins agent listener port, ignored if agent.enabled=false
##
containerPorts:
  http: 8080
  https: 8443
  agentListener: 50000
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Jenkins pods' Security Context
## @param podSecurityContext.fsGroup Set Jenkins pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Jenkins containers' Security Context
## @param containerSecurityContext.runAsUser Set Jenkins container's Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set Jenkins container's Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
## Configure extra options for Jenkins containers' startup, liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param startupProbe.enabled Enable startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 6
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 6
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
#
customReadinessProbe: {}

## @section Traffic Exposure Parameters

## Jenkins service parameters
##
service:
  ## @param service.type Jenkins service type
  ##
  type: ClusterIP
  ## @param service.ports.http Jenkins service HTTP port
  ## @param service.ports.https Jenkins service HTTPS port
  ##
  ports:
    http: 80
    https: 443
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
    https: ""
  ## @param service.clusterIP Jenkins service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Jenkins service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Jenkins service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Jenkins service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for Jenkins service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []
  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

## Jenkins agent listener service parameters
## NOTE: ignored if agent.enabled=false
##
agentListenerService:
  ## @param agentListenerService.enabled
  ##
  enabled: true
  ## @param agentListenerService.type Jenkins service type
  ##
  type: ClusterIP
  ## @param agentListenerService.ports.agentListener Jenkins service agent listener port
  ##
  ports:
    agentListener: 50000
  ## Node ports to expose
  ## @param agentListenerService.nodePorts.agentListener Node port for agent listener
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    agentListener: ""
  ## @param agentListenerService.clusterIP Jenkins service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param agentListenerService.loadBalancerIP Jenkins service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param agentListenerService.loadBalancerSourceRanges Jenkins service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param agentListenerService.externalTrafficPolicy Jenkins service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param agentListenerService.annotations Additional custom annotations for Jenkins service
  ##
  annotations: {}
  ## @param agentListenerService.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []
  ## @param agentListenerService.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
  ## @param agentListenerService.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

## Configure the ingress resource that allows you to access the Jenkins installation
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Jenkins
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: jenkins.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: jenkins.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - jenkins.local
  ##   secretName: jenkins.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: jenkins.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Persistence Parameters

## Persistence Parameters
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: "nfs-csi"
  ## @param persistence.existingClaim Use a existing PVC which must be created manually before bound
  ##
  existingClaim: ""
  ## @param persistence.annotations Additional custom annotations for the PVC
  ##
  annotations: {}
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 8Gi
  ## @param persistence.selector Selector to match an existing Persistent Volume for Ingester's data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
## based on the podSecurityContext/containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## OS Shell + Utility image
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param volumePermissions.image.registry OS Shell + Utility image registry
  ## @param volumePermissions.image.repository OS Shell + Utility image repository
  ## @param volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
  ## @param volumePermissions.image.digest OS Shell + Utility image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
  ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 11-debian-11-r19
    digest: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.securityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  securityContext:
    runAsUser: 0

## @section Other Parameters
##

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

